@page "/Error"
@using System.Diagnostics

<PageTitle>Error</PageTitle>

<div class="container-fluid px-4">
    <div class="text-center mt-5">
        <div class="error-circle mb-4">
            <i class="fas fa-exclamation-triangle fa-3x text-danger"></i>
        </div>
        <h1 class="display-4">Oops!</h1>
        <p class="lead">Sorry, an error has occurred.</p>
        
        @if (ShowTechnicalDetails)
        {
            <div class="alert alert-danger mx-auto" style="max-width: 800px;">
                <p class="mb-0"><strong>Error Details:</strong></p>
                <p class="mb-0">@ErrorMessage</p>
            </div>
        }

        <div class="mt-4">
            <button class="btn btn-primary me-2" @onclick="NavigateHome">
                <i class="fas fa-home me-2"></i> Return Home
            </button>
            <button class="btn btn-outline-primary" @onclick="@(() => ShowTechnicalDetails = !ShowTechnicalDetails)">
                <i class="fas fa-code me-2"></i> @(ShowTechnicalDetails ? "Hide" : "Show") Technical Details
            </button>
        </div>
    </div>
</div>

<style>
    .error-circle {
        width: 120px;
        height: 120px;
        border-radius: 50%;
        background-color: #fff;
        border: 4px solid #dc3545;
        display: flex;
        align-items: center;
        justify-content: center;
        margin: 0 auto;
    }
</style>

@code {
    [Parameter]
    public string? ErrorMessage { get; set; }

    private bool ShowTechnicalDetails { get; set; }

    protected override void OnInitialized()
    {
        ErrorMessage ??= "An unexpected error occurred while processing your request.";
    }

    private void NavigateHome()
    {
        NavigationManager.NavigateTo("/");
    }
}
